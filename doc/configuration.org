# -*- mode: org; eval: (visual-line-mode t) -*-

This document covers the configuration of the Watershedpi computer.  Some of the information here will be redundant of development.org, but that document is more wide-ranging in scope, covering many things that were not actually used in the project, while this document is limited to the actual final setup.  If things change in the future, please keep this document current with changes so that it can be referred to if the setup needs to be recreated.

* Connections

Ensure that the APC is off. (Longpress its power button.)

** Connections on the Raspberry Pi base unit (bottom, green)

 - Power (mini-USB)
 - APC data link (USB)

** Connections to IO Board (middle, white)

 - Wave LED Strip on 4-pin JST pigtail
 - Button connectors
   - The buttons connect to the pairs of pins mounted on the front edge of the IO Board. There are 8 pairs here, and 8 more pairs near the back edge of the board. The near set are from left to right 1 through 8, and the far set are numbered (left to right) 9 through 16.
   - 6 :: Reset switch
   - 7 :: GoodDroplet switch
   - 8 :: BadDroplet switch

** RGB Matrix HAT (top, blue)

 - Power in (barrel jack - 5 volt, 10 amp power supply)
 - Power out (red and black wires into terminal block, red left, black right, to Matrix.)
 - Data out (14 pin ribbon cable to Matrix)

** LED Strips

 - IO Board pigtail to Wave right with short extension (~55")
 - 5v 10a power to Wave right
 - Wave left to Rain bottom with long extension (~72")
 - 5v 10a power to Rain bottom
 - Rain top to GoodDroplet top with short extension (~55")
 - GoodDroplet bottom to BadDroplet bottom
 - 5v 4a power to GoodDroplet/BadDroplet junction

* Power
** power off

Cut power to the APC and the Pi will shut down safely within about a minute.

** power on

Restore power to the APC and the Pi will boot automatically.

** power off when you want to keep the APC on (for development, etc)

Log in to the Pi and issue the shutdown command:

 : shutdown now

When shutdown has completed, you can turn off the APC if desired by long-pressing its power button.

** power on when the APC is already on (for development, etc)

Simplest: turn off the APC by long-pressing its power button, then turn it back on.

Other method: unplug the power cables to both the Pi and the Matrix HAT, then plug them back in.

** references

https://rmoff.net/2016/07/18/configuring-ups-apcupsd/

*** /etc/apcusbd/apcupsd.conf

 : ## DEVICE should be blank
 : DEVICE

 : ## set the TIMEOUT - how many seconds should the power source
 : ## have been out before issuing safe shutdown.
 : TIMEOUT 5

** summary

We power the project with an APC UPS that includes a USB data port.  The USB data port is connected to the Pi, and apcupsd is configured to perform a safe shutdown when it is detected that the power source has been offline for more than 5 seconds.  The daemon polls the APC every minute so the maximum time to shutdown would be 65 seconds.

* Log in
** with monitor and keyboard

 - username :: pi
 - password :: watershed

** over network

Pi's network information:

 - IP :: 192.168.0.10
 - Netmask :: 255.255.255.0

With another computer on the 192.168.0.x/24 network, ssh to 192.168.0.10 and log in:

 - username :: pi
 - password :: watershed

* Start and Stop the Exhibit

Watershed runs automatically at startup as a system service.  Its service file is:

 : /etc/systemd/system/watershed.service

If you need to start and stop this manually, the usual systemd commands will do:

 : $ sudo systemctl stop watershed
 : $ sudo systemctl start watershed

The program itself lives in:

 : /home/pi/watershed

You can enter this directory and run it without going through systemd as well:

 : $ cd ~/watershed
 : $ sudo ./watershed.py

* Troubleshooting
** SD Card Corruption

Corruption of the SD card could lead to all sorts of problems, including system freezes, and failure to boot or start the software.

Unsafe shutdown is the most common cause of SD card corruption.  We address this potential by having the Pi run on a battery backup system so that it can safely shut down.

We also keep a spare copy of the SD card in the Pi enclosure.  This can be [gently] swapped with the installed one if SD card corruption is suspected.

** Pi is working but watershed program didn't start

Log in, check out the load status of watershed.service:

 : $ systemctl list-units

Try stopping and starting the service.  Look in the journal to see if any errors were logged:

 : $ sudo journalctl -u watershed

Try running the watershed program from the command line, not as a system service.

** System freeze

A system freeze may be hard to identify without a monitor and keyboard attached to the Pi, but the Pi's green LED will be lit, nothing will be on the matrix or LEDs (or the LEDs may retain a frozen last state), and you won't be able to ssh into the Pi.

This happened once for me, and it's hard to say what the cause could be.  My guess would be not enough voltage to the matrix, or possibly some failed electronic component on the Pi or the matrix HAT.

To deal with this, turn the APC off and then on again.

If it happens regularly, we need to investigate further.

* Hardware
** Raspberry Pi 3B
** Switches

The switches are connected to an MCP23017 IO expander, which operates on the I2C bus, address 0x20.

** LED Strip
** LED Matrix

The matrix runs on an Adafruit RGB Matrix + RTC HAT.  GPIO #4 and #18 are
bridged for higher quality display.

We are not using the RTC (Realtime clock), but it uses I2C address 0x68.  It is not clear to me whether this address is taken even if we are not using the clock.

* Raspbian 9.4 (Stretch)
** Raspi-config

Use the raspi-config tool to turn on and off interfacing options as appropriate:

 - SSH :: on
 - VNC :: off
 - SPI :: off
 - I2C :: on
 - Serial :: off
 - Remote GPIO :: off

** System services

Disable a few system services that are not needed:

 : sudo systemctl stop bluetooth
 : sudo systemctl disable bluetooth

 : sudo systemctl stop bluetooth.target
 : sudo systemctl disable bluetooth.target

 : sudo systemctl stop apt-daily-upgrade
 : sudo systemctl disable apt-daily-upgrade.timer

 : sudo systemctl stop apt-daily
 : sudo systemctl disable apt-daily.timer

** Remove Raspberry Pi logo from top left of terminal

 - Edit /boot/cmdline.txt
 - Insert "logo.nologo" into the list of options.
 - example:

    : logo.nologo dwc_otg.lpm_enable=0 console=ttyAMA0,115200 console=tty1
    :    root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait

* Software

The program that runs the exhibit is called "watershed".  It is written in Python 3.5 and its installation location is `/home/pi/watershed`.

It depends on a patched version of the Adafruit_Dotstar_Pi library.

 - https://github.com/adafruit/Adafruit_DotStar_Pi

 - https://github.com/adafruit/Adafruit_DotStar_Pi/issues/24
